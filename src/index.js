import express from 'express';
import { ApolloServer, gql } from 'apollo-server-express';

const port = process.env.PORT || 4000;

// –û–ø—Ä–µ–¥–µ–ª–∏–º —Å—Ö–µ–º—É GraphQL
const typeDefs = gql`
    type Query {
        hello: String
    }
`;

// –†–µ–∑–æ–ª–≤–µ—Ä—ã
const resolvers = {
    Query: {
        hello: () => 'Hello World',
    },
};

// –°—Ç–∞—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞
async function startServer() {
    try {
        const app = express();
        const server = new ApolloServer({
            typeDefs,
            resolvers,
        });

        // –ñ–¥—ë–º, –ø–æ–∫–∞ —Å–µ—Ä–≤–µ—Ä —Å—Ç–∞—Ä—Ç—É–µ—Ç
        await server.start();

        // –¢–µ–ø–µ—Ä—å –ø—Ä–∏–º–µ–Ω—è–µ–º middleware
        server.applyMiddleware({ app, path: '/api' });

        // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞—Ç—å –ø–æ—Ä—Ç
        app.listen(port, () => {
            console.log(`üöÄ GraphQL Server ready at http://localhost:${port}/api`);
        });
    } catch (err) {
        console.error("–û—à–∏–±–∫–∞ —Å—Ç–∞—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞:", err);
    }
}

startServer();